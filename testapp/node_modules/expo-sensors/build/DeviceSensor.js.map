{"version":3,"file":"DeviceSensor.js","sourceRoot":"","sources":["../src/DeviceSensor.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Subscription, Platform } from '@unimodules/core';\nimport { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\ntype Listener<E> = (event: E) => void;\n\ntype NativeSensorModule = any;\n\n/**\n * A base class for subscribable sensors. The events emitted by this class are measurements\n * specified by the parameter type `M`.\n */\nexport default class DeviceSensor<M> {\n  _nativeModule: NativeSensorModule;\n  _nativeEmitter: EventEmitter;\n  _nativeEventName: string;\n  _listenerCount: number;\n\n  constructor(nativeSensorModule: NativeSensorModule, nativeEventName: string) {\n    this._nativeModule = nativeSensorModule;\n\n    this._nativeEmitter = new EventEmitter(nativeSensorModule);\n    this._nativeEventName = nativeEventName;\n    this._listenerCount = 0;\n  }\n\n  addListener = (listener: Listener<M>): Subscription => {\n    const subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n    subscription.remove = () => this.removeSubscription(subscription);\n    this._listenerCount++;\n    return subscription;\n  };\n\n  hasListeners = (): boolean => {\n    return this._listenerCount > 0;\n  };\n\n  getListenerCount = (): number => {\n    return this._listenerCount;\n  };\n\n  removeAllListeners = (): void => {\n    this._listenerCount = 0;\n    this._nativeEmitter.removeAllListeners(this._nativeEventName);\n  };\n\n  removeSubscription = (subscription: Subscription): void => {\n    this._listenerCount--;\n    this._nativeEmitter.removeSubscription(subscription);\n  };\n\n  setUpdateInterval = (intervalMs: number): void => {\n    if (!this._nativeModule.setUpdateInterval) {\n      console.warn(`expo-sensors: setUpdateInterval() is not supported on ${Platform.OS}`);\n    } else {\n      this._nativeModule.setUpdateInterval(intervalMs);\n    }\n  };\n\n  isAvailableAsync = async (): Promise<boolean> => {\n    if (!this._nativeModule.isAvailableAsync) {\n      return false;\n    } else {\n      return await this._nativeModule.isAvailableAsync();\n    }\n  };\n\n  getPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.getPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.getPermissionsAsync();\n    }\n  };\n\n  requestPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.requestPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.requestPermissionsAsync();\n    }\n  };\n}\n\nconst defaultPermissionsResponse: PermissionResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED,\n};\n"]}